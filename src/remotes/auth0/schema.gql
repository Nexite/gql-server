type User {
  id: ID!
  blocked: Boolean!
  email: String
  username: String
  picture(transform: UserPictureTransformInput): String
  givenName: String
  familyName: String
  name: String
  title: String
  bio: String
  phoneNumber: String
  pronoun: String
  roles: [UserRole]
}

type UserRole {
  id: ID!
  name: String!
  description: String
}

enum UserPictureFit {
  CLAMP,
  CLIP,
  CROP,
  FACEAREA,
  FILL,
  FILLMAX,
  MAX,
  MIN,
  SCALE,
}

input UserPictureTransformInput {
  width: Int
  height: Int
  fit: UserPictureFit
}

input UserSingleInput {
  id: ID
  username: String
  email: String
  discordId: String
}

input UserSearch {
  givenName: String
  familyName: String
  name: String
}

type Query {
  getUser(where: UserSingleInput): User
  searchUsers(where: UserSearch): [User]
  roleUsers(roleId: String): [User]
}
